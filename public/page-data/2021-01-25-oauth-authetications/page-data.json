{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021-01-25-oauth-authetications/","result":{"data":{"site":{"siteMetadata":{"title":"fengd's zone","author":"fengd"}},"markdownRemark":{"id":"3fcd5bf6-4250-5e87-babd-84a44ef6bb2c","html":"<h2 id=\"authorization-grant-types\"><a href=\"#authorization-grant-types\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Authorization Grant Types</h2>\n<h3 id=\"authorization-code\"><a href=\"#authorization-code\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Authorization Code</h3>\n<p>授权码，Authorization Code， 是由授权服务器代表资源所有者颁发给 Client 的，访问该资源的一种授权。这个授权服务器作为 Client 和资源所有者之间的一个媒介，在授权过程中，授权服务器负责和 Resource Owner 之间做验证，Resource Owner 只和授权服务器做验证，资源所有者的 credential 信息不会透露给 Client。</p>\n<p>通俗一点来说，Client 把需要验证的用户重定向到授权服务器上，用户在授权服务器上输入自己的 credential 信息，授权服务器拿到credential 信息之后，去做验证，验证通过之后，返回一个 Authorization Code 给到 Client。</p>\n<h3 id=\"implict\"><a href=\"#implict\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implict</h3>\n<p>简化的 Authorization Code 授权模式， 通常被用于浏览器中授权， 过程中不再通过授权服务器，而是由 Resource Owner 直接返回 Access Code 给 Client。 这个过程由于跳过了中间的授权服务器，提高了授权的响应速度，但是由于这个授权码 Access Token 是通过 RedirectUrl 来传递了，这个大大提高了暴露的风险。</p>\n<h3 id=\"resource-owner-password-credentials\"><a href=\"#resource-owner-password-credentials\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resource Owner Password Credentials</h3>\n<p>在授权过程中，直接使用用户名密码登陆，比如登陆 Twitter， Facebook 等自家 App。 </p>\n<p>如果你是用 TweetBot 这种第三方的 App，登陆过程走的就是第一个种 Authorization Code 的方式。</p>\n<h3 id=\"client-credentials\"><a href=\"#client-credentials\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Client Credentials</h3>\n<p>Client Credential 这种模式通常是指当前的 Client 是需要访问的资源的 Owner，或者已经获得了授权，有权限访问制定的资源。</p>\n<h2 id=\"access-token\"><a href=\"#access-token\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Access Token</h2>\n<h2 id=\"refresh-token\"><a href=\"#refresh-token\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Refresh Token</h2>\n<p>用来获取 Access Token，</p>\n<p>A refresh token is a string representing the authorization granted to the client by the resource owner. The string is usually opaque to the client.</p>","timeToRead":1,"frontmatter":{"title":"General Introduction To OAuth Authentication","date":"January 25, 2021","spoiler":"在 Mac 本地机器上搭建一个 Zookeeper 集群"},"fields":{"slug":"/2021-01-25-oauth-authetications/","langKey":"en"}}},"pageContext":{"slug":"/2021-01-25-oauth-authetications/","previous":{"fields":{"slug":"/kafka-basics/","langKey":"en","directoryName":"kafka-basics"},"frontmatter":{"title":"Kafka 基本概念"}},"next":{"fields":{"slug":"/2021-03-18-getter-setter-mistakes/","langKey":"en","directoryName":"2021-03-18-getter-setter-mistakes"},"frontmatter":{"title":"Common Getter Setter Mistakes In Java"}},"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}