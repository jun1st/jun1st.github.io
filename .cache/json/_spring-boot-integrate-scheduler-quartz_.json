{"data":{"site":{"siteMetadata":{"title":"fengd's zone","author":"fengd"}},"markdownRemark":{"id":"86951ced-dd3f-5c88-a706-f308e37546cf","html":"<p>Spring 框架自带定时任务功能，虽然看上去挺简单的，但是也能处理大部分日常的任务了。 如果想要对任务处理有更多的控制，更多的自定义的东西，那么可以考虑使用 Quartz， 如果想要有分布式处理的能力，可以使用 elastic job。 本文介绍如何集成 Spring Boot 和 Quartz</p>\n<h2 id=\"安装-maven-依赖\"><a href=\"#%E5%AE%89%E8%A3%85-maven-%E4%BE%9D%E8%B5%96\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装 maven 依赖</h2>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.quartz-scheduler<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>quartz<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.3.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.quartz-scheduler<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>quartz-jobs<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.3.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"集成-spring-依赖注入\"><a href=\"#%E9%9B%86%E6%88%90-spring-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>集成 Spring 依赖注入</h2>\n<p>首先，接入 Spring 当然需要让定义的 Job 能支持 Autowire，不然接入有什么意义。 这里通过实现 ApplicationContextAware 接口，拿到 AutowireCapableBeanFactory, 再通过这个 Factory 去 Autowire Job 实例</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * Adds auto-wiring support to quartz jobs.\n * @see \"https://gist.github.com/jelies/5085593\"\n */</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AutowiringSpringBeanJobFactory</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SpringBeanJobFactory</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApplicationContextAware</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">transient</span> <span class=\"token class-name\">AutowireCapableBeanFactory</span> beanFactory<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">{</span>\n        beanFactory <span class=\"token operator\">=</span> applicationContext<span class=\"token punctuation\">.</span><span class=\"token function\">getAutowireCapableBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">createJobInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerFiredBundle</span> bundle<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">Object</span> job <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">createJobInstance</span><span class=\"token punctuation\">(</span>bundle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">autowireBean</span><span class=\"token punctuation\">(</span>job<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> job<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这个是配置了一些 Quartz 属性，</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SchedulerConfig</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">JobFactory</span> <span class=\"token function\">jobFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContext</span> applicationContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">AutowiringSpringBeanJobFactory</span> jobFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AutowiringSpringBeanJobFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jobFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setApplicationContext</span><span class=\"token punctuation\">(</span>applicationContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> jobFactory<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SchedulerFactoryBean</span> <span class=\"token function\">schedulerFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JobFactory</span> jobFactory<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">SchedulerFactoryBean</span> factoryBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SchedulerFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setOverwriteExistingJobs</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setJobFactory</span><span class=\"token punctuation\">(</span>jobFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setStartupDelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setAutoStartup</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setApplicationContextSchedulerContextKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        factoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setQuartzProperties</span><span class=\"token punctuation\">(</span><span class=\"token function\">quartzProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> factoryBean<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Properties</span> <span class=\"token function\">quartzProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">PropertiesFactoryBean</span> propertiesFactoryBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PropertiesFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        propertiesFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setLocation</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/quartz.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        propertiesFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">afterPropertiesSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> propertiesFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"quartz-的处理策略\"><a href=\"#quartz-%E7%9A%84%E5%A4%84%E7%90%86%E7%AD%96%E7%95%A5\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quartz 的处理策略</h2>\n<h3 id=\"simple-trigger-without-repeating\"><a href=\"#simple-trigger-without-repeating\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simple trigger without repeating</h3>\n<ol>\n<li>smart policy - default\n这是默认策略，等同于 第 2 条</li>\n<li>withMisfireHandlingInstructionFireNow\n如果计划是 2 点执行，但是但是由于各种原因没有执行，比如进程被停了，那么当进程 3 点钟起来的时候，会被立即执行。</li>\n<li>withMisfireHandlingInstructionIgnoreMisfires\n等同于第 2 条</li>\n<li>withMisfireHandlingInstructionNextWithExistingCount\n等同于第 5 条</li>\n<li>withMisfireHandlingInstructionNextWithRemainingCount\n如果 job 错过执行，直接忽略.</li>\n<li>withMisfireHandlingInstructionNowWithExistingCount\n同第 2 条</li>\n<li>withMisfireHandlingInstructionNowWithRemainingCount\n同第 2 条</li>\n</ol>\n<h3 id=\"simple-trigger-with-repeating\"><a href=\"#simple-trigger-with-repeating\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simple trigger with repeating</h3>\n<ol>\n<li>smart policy - default\n这是默认策略，等同于第 5 条</li>\n<li>withMisfireHandlingInstructionFireNow\n等同于第 5 条</li>\n<li>withMisfireHandlingInstructionIgnoreMisfires\n会立刻执行所有错过的 Job，</li>\n<li>withMisfireHandlingInstructionNextWithExistingCount\n错过的任务，会被重新执行</li>\n<li>withMisfireHandlingInstructionNextWithRemainingCount\n错过执行的任务，都会被丢弃。剩下的任务继续执行</li>\n<li>withMisfireHandlingInstructionNowWithExistingCount\n立即开始执行，同时更具当前时间重新计算 job internal 时间</li>\n<li>withMisfireHandlingInstructionNowWithRemainingCount\n错过的任务只会被执行一次，即使有错过多次。剩下的任务继续执行。</li>\n</ol>\n<h3 id=\"cron-triggers\"><a href=\"#cron-triggers\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CRON Triggers</h3>\n<ol>\n<li>smart policy - default\n这是默认策略，等同于第 3 条</li>\n<li>withMisfireHandlingInstructionIgnoreMisfires\n错过了的任务会被立即执行，如果错过了三次，那这三次立刻同时执行。然后继续等待下一个 schedule</li>\n<li>withMisfireHandlingInstructionFireAndProceed\n错过的任务会被执行一次，不论错过了多少次。 然后继续等待下一个 schedule</li>\n<li>withMisfireHandlingInstructionDoNothing\n错过了就错过了，继续等待下一个 schedule</li>\n</ol>","timeToRead":4,"frontmatter":{"title":"Spring Boot 集成 Quartz 任务处理","date":"May 15, 2019","spoiler":"Spring Boot 集成 Quartz 任务处理，详细介绍了 Quartz 的各种策略"},"fields":{"slug":"/spring-boot-integrate-scheduler-quartz/","langKey":"en"}}},"pageContext":{"slug":"/spring-boot-integrate-scheduler-quartz/","previous":{"fields":{"slug":"/new-features-of-javascript-tips-in-2019/","langKey":"en","directoryName":"new-features-of-javascript-tips-in-2019"},"frontmatter":{"title":"New Features of JavaScript in 2019"}},"next":{"fields":{"slug":"/intellij-idea-problems-on-catalina/","langKey":"en","directoryName":"intellij-idea-problems-on-catalina"},"frontmatter":{"title":"IntelliJ Idea Cannot Open Project on Catalina Beta 5"}},"translations":[],"translatedLinks":[]}}