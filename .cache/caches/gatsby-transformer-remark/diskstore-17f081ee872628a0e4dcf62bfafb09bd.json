{"expireTime":9007200859284084000,"key":"transformer-remark-markdown-html-38f09eb111f86842ad78e5cd5a4efa17-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":"<p>微服务这事，说起来比做起来容易多了。感谢 Pivotal, 有了 Spring Boot， 有了 Spring Cloud， 当然也要感谢\nNetflix，为 Spring Cloud 贡献了那么多优秀的项目。</p>\n<h4 id=\"服务的注册和发现--eureka\"><a href=\"#%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0--eureka\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>服务的注册和发现 — Eureka</h4>\n<p>作为一个服务的提供者，需要想一个中枢注册自己这个服务。\n作为服务的使用者，需要有一个统一的地方，可以查找都有那些服务可以用。比如以前的中国黄页，甚至现在的 Google，都形式上类似。</p>\n<p><a href=\"https://cloud.spring.io/spring-cloud-netflix/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Eureka</a> 就是 Netflix\n开源贡献的一个优秀的服务注册和发现项目。</p>\n<h4 id=\"构建-eureka-server\"><a href=\"#%E6%9E%84%E5%BB%BA-eureka-server\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>构建 Eureka Server</h4>\n<p>使用 Eureka Server 构建服务注册和发现应用。我使用 IntelliJ 作为开发工具，在项目新建的 Wizard 中，添加 Eureka\nServer 服务：</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*r2TUXrg6g9wOf2qynWV-3g.png\"></p>\n<p>只需要在 SpringApplication 上添加一个 EnableEurekaServer 的注解，</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token annotation punctuation\">@EnableEurekaServer</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EurekaServerApplication</span> <span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EurekaServerApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>并且设置一些服务的属性，就可以启动一个 Eureka Server</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">server<span class=\"token punctuation\">.</span>port<span class=\"token operator\">=</span><span class=\"token number\">8000</span>\n# 是否注册到 eureka 上， 本身是server，所以不注册\neureka<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>register<span class=\"token operator\">-</span><span class=\"token keyword\">with</span><span class=\"token operator\">-</span>eureka<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>\n# 是否从 server 获取注册的服务的信息。\neureka<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>fetch<span class=\"token operator\">-</span>registry<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>\n# 指定 <span class=\"token class-name\">Eureka</span> <span class=\"token class-name\">Server</span> 地址\neureka<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>serviceUrl<span class=\"token punctuation\">.</span>defaultZone<span class=\"token operator\">=</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>localhost<span class=\"token operator\">:</span><span class=\"token number\">8000</span><span class=\"token operator\">/</span>eureka</code></pre></div>\n<p>因为所有服务都在本地，所以指定了端口为 8000，方便记忆。 Eureka 默认的端口是 8761。</p>\n<p>访问 localhost:8000, 看到的界面应该如下图所示。目前，一个注册的 instances 都还没有。</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/1*haL0fhosQOYLBTOUBaylzg.png\"></p>\n<p>接下去，我们在开发一个 Service Provider 注册到这个 Eureka 上去。</p>\n<p>示例代码： <a href=\"https://github.com/jun1st/eureka-server\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo 地址在这里</a></p>"}