{"expireTime":9007200834421580000,"key":"transformer-remark-markdown-html-152dc23e23762cd83d12f06fd6508883-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":"<h2 id=\"下载-kafka\"><a href=\"#%E4%B8%8B%E8%BD%BD-kafka\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>下载 Kafka</h2>\n<p>通过 Kafka 官网下载最新的 Kafka， Kafka 的版本更新还是蛮保守传统的，目前还是 2.4.0 的版本。 但是解压包文件，解压出来的文件夹是 kafka_2.12-2.4.0, 什么 2.12？\n其实这是使用的 Scala 的版本，2.4.0 才是当前的 Kafka 的版本</p>\n<h2 id=\"集群配置\"><a href=\"#%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>集群配置</h2>\n<p>Kafka 的关键配置 server.properties</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">broker.id=1\nlisteners=PLAINTEXT://:9090\nlog.dirs=/tmp/kafka-logs\nnum.partitions=3\noffsets.topic.replication.factor=3\nzookeeper.connect=localhost:2181</code></pre></div>\n<p>设置每个 Topic 的 partitions 数为 3，并且设置 offsets 的 replication factor 为 3。</p>\n<p>创建一个 server-1.properties 和 server-2.properties 文件， 因为在本地机器上，部署一个假的 Kafka 集群，所有需要修改的值有 broker.id, listeners, log.dirs,\n不同的 broker，在本机上配置不同的 log 目录。</p>\n<h2 id=\"开启-kafka-集群\"><a href=\"#%E5%BC%80%E5%90%AF-kafka-%E9%9B%86%E7%BE%A4\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开启 Kafka 集群</h2>\n<p>先开启 zookeeper, 进入 Kafka 目录，</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">bin/zookeeper-server-start.sh config/zookeeper.properties</code></pre></div>\n<p>在依次开启三个 Kafka 实例。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">bin/kafka-server-start.sh config/server.properties\nbin/kafka-server-start.sh config/server-1.properties\nbin/kafka-server-start.sh config/server-2.properties</code></pre></div>\n<p>应该开启成功了三个 Kafka 实例。 在这里没有以 daemon 的模式开启 Kafka，是想能实时的看到运行的 log。 我们来看下 Kafka 中的 Topic 数据。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">bin/kafka-topics.sh --bootstrap-server localhost:9092 --list\n<span class=\"token comment\">## __consumer_offsets</span></code></pre></div>\n<p>只有一个 topic， __consumer_offsets, 这个 topic 是 kafka 默认创建的。 来看下这个 topic 的一些属性，</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">bin/kafka-topics.sh --bootstrap-server localhost:9092 --describe __consumber_offsets\n<span class=\"token comment\">## Topic: __consumer_offsets\tPartitionCount: 50\tReplicationFactor: 1\tConfigs: compression.type=producer,cleanup.policy=compact,segment.bytes=104857600</span></code></pre></div>\n<p>可以看到这个 Topic 的 50 个分区数据，但是 replication 数却是 1。 这个 1 意味着前面的分区数据，只会存在于一个 broker 中，如果某一个 broker 坏了，那么存在这个 broker 中的分片数据，\n就不可用。</p>\n<h3 id=\"修改-consumer_offsets-replication-数\"><a href=\"#%E4%BF%AE%E6%94%B9-consumer_offsets-replication-%E6%95%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>修改 consumer_offsets Replication 数</h3>\n<p>修改 consumer_offsets 的 replication factor，需要用到 kafka 的 reassignment 功能， 这时需要自己提供一个 assignment json 文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxon\"><pre class=\"language-jsxon\"><code class=\"language-jsxon\">{\n  &quot;version&quot;: 1,\n  &quot;partitions&quot;: [\n    { &quot;topic&quot;: &quot;__consumer_offsets&quot;, &quot;partition&quot;: 0, &quot;replicas&quot;: [1, 2, 3] },\n    { &quot;topic&quot;: &quot;__consumer_offsets&quot;, &quot;partition&quot;: 1, &quot;replicas&quot;: [1, 2, 3] },\n    { &quot;topic&quot;: &quot;__consumer_offsets&quot;, &quot;partition&quot;: 2, &quot;replicas&quot;: [1, 2, 3] },\n    ...\n  ]\n}</code></pre></div>\n<p>完整的 json 文件可以在这里下载： <a href=\"https://gist.github.com/jun1st/31aaf1ebe6c93c4a11079073512a9c30\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gist</a></p>\n<p>执行修改：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">bin/kafka-reassign-partitions.sh --zookeeper localhost:2181 --reassignment-json-file __consumer_offsets.json --execute</code></pre></div>\n<p>执行完毕，再用 describe 查看 topic 信息</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">bin/kafka-topics.sh --bootstrap-server localhost:9092 --describe __consumber_offsets\n<span class=\"token comment\"># Topic: __consumer_offsets\tPartitionCount: 50\tReplicationFactor: 3\tConfigs: compression.type=producer,cleanup.policy=compact,segment.bytes=104857600</span></code></pre></div>\n<p>执行成功，</p>\n<p>这时，你关掉一个 kafka 实例，停掉一个 broker，并不会看到有报错信息，而是会看到 kafka 的 rebalance log，</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:53:09,341<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>GroupMetadataManager <span class=\"token assign-left variable\">brokerId</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Finished loading offsets and group metadata from __consumer_offsets-23 <span class=\"token keyword\">in</span> <span class=\"token number\">0</span> milliseconds. <span class=\"token punctuation\">(</span>kafka.coordinator.group.GroupMetadataManager<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:53:09,341<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>GroupMetadataManager <span class=\"token assign-left variable\">brokerId</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Finished loading offsets and group metadata from __consumer_offsets-26 <span class=\"token keyword\">in</span> <span class=\"token number\">0</span> milliseconds. <span class=\"token punctuation\">(</span>kafka.coordinator.group.GroupMetadataManager<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:53:09,341<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>GroupMetadataManager <span class=\"token assign-left variable\">brokerId</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Finished loading offsets and group metadata from __consumer_offsets-29 <span class=\"token keyword\">in</span> <span class=\"token number\">0</span> milliseconds. <span class=\"token punctuation\">(</span>kafka.coordinator.group.GroupMetadataManager<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:53:09,341<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>GroupMetadataManager <span class=\"token assign-left variable\">brokerId</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Finished loading offsets and group metadata from __consumer_offsets-32 <span class=\"token keyword\">in</span> <span class=\"token number\">0</span> milliseconds. <span class=\"token punctuation\">(</span>kafka.coordinator.group.GroupMetadataManager<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:53:09,341<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>GroupMetadataManager <span class=\"token assign-left variable\">brokerId</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Finished loading offsets and group metadata from __consumer_offsets-35 <span class=\"token keyword\">in</span> <span class=\"token number\">0</span> milliseconds. <span class=\"token punctuation\">(</span>kafka.coordinator.group.GroupMetadataManager<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:53:09,341<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>GroupMetadataManager <span class=\"token assign-left variable\">brokerId</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Finished loading offsets and group metadata from __consumer_offsets-38 <span class=\"token keyword\">in</span> <span class=\"token number\">0</span> milliseconds. <span class=\"token punctuation\">(</span>kafka.coordinator.group.GroupMetadataManager<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:53:09,342<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>GroupMetadataManager <span class=\"token assign-left variable\">brokerId</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Finished loading offsets and group metadata from __consumer_offsets-41 <span class=\"token keyword\">in</span> <span class=\"token number\">1</span> milliseconds. <span class=\"token punctuation\">(</span>kafka.coordinator.group.GroupMetadataManager<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:53:09,342<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>GroupMetadataManager <span class=\"token assign-left variable\">brokerId</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Finished loading offsets and group metadata from __consumer_offsets-44 <span class=\"token keyword\">in</span> <span class=\"token number\">0</span> milliseconds. <span class=\"token punctuation\">(</span>kafka.coordinator.group.GroupMetadataManager<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:53:09,342<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>GroupMetadataManager <span class=\"token assign-left variable\">brokerId</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Finished loading offsets and group metadata from __consumer_offsets-47 <span class=\"token keyword\">in</span> <span class=\"token number\">0</span> milliseconds. <span class=\"token punctuation\">(</span>kafka.coordinator.group.GroupMetadataManager<span class=\"token punctuation\">)</span></code></pre></div>\n<p>再把关掉的 kafka 实例开起来，会看到新的 broker 加入 cluster 的 log</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,427<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-26 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> ISR updated to <span class=\"token punctuation\">[</span><span class=\"token number\">2,1</span>,3<span class=\"token punctuation\">]</span> and zkVersion updated to <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,427<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-29 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Expanding ISR from <span class=\"token number\">2,1</span> to <span class=\"token number\">2,1</span>,3 <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,428<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-29 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> ISR updated to <span class=\"token punctuation\">[</span><span class=\"token number\">2,1</span>,3<span class=\"token punctuation\">]</span> and zkVersion updated to <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,428<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-34 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Expanding ISR from <span class=\"token number\">1,2</span> to <span class=\"token number\">1,2</span>,3 <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,428<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-34 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> ISR updated to <span class=\"token punctuation\">[</span><span class=\"token number\">1,2</span>,3<span class=\"token punctuation\">]</span> and zkVersion updated to <span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,428<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-10 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Expanding ISR from <span class=\"token number\">1,2</span> to <span class=\"token number\">1,2</span>,3 <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,429<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-10 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> ISR updated to <span class=\"token punctuation\">[</span><span class=\"token number\">1,2</span>,3<span class=\"token punctuation\">]</span> and zkVersion updated to <span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,429<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-32 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Expanding ISR from <span class=\"token number\">2,1</span> to <span class=\"token number\">2,1</span>,3 <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,430<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-32 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> ISR updated to <span class=\"token punctuation\">[</span><span class=\"token number\">2,1</span>,3<span class=\"token punctuation\">]</span> and zkVersion updated to <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,430<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-40 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> Expanding ISR from <span class=\"token number\">1,2</span> to <span class=\"token number\">1,2</span>,3 <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2019</span>-12-29 <span class=\"token number\">21</span>:55:28,430<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>Partition __consumer_offsets-40 <span class=\"token assign-left variable\">broker</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> ISR updated to <span class=\"token punctuation\">[</span><span class=\"token number\">1,2</span>,3<span class=\"token punctuation\">]</span> and zkVersion updated to <span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>kafka.cluster.Partition<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"使用-kafka-manager-来管理\"><a href=\"#%E4%BD%BF%E7%94%A8-kafka-manager-%E6%9D%A5%E7%AE%A1%E7%90%86\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 Kafka Manager 来管理</h2>\n<p>Kafka Manager 是 Yahoo 开源的 Kafka 管理工具，在 github 上<a href=\"https://github.com/yahoo/kafka-manager\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">下载</a></p>\n<p>在本机上，按照说明下载就好，</p>\n<p>管理界面如下：</p>\n<p><img src=\"/posts/kafka-manager.png\" alt=\"kafka-manager\"></p>\n<p>Replicas 数是 3 !!!</p>"}